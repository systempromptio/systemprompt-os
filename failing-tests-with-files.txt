tests/unit/modules/core/auth/providers/core/oauth2.spec.ts :: GenericOAuth2Provider > exchangeCodeForTokens > exchanges authorization code for tokens
tests/unit/modules/core/auth/providers/core/oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > fetches user info with access token
tests/unit/modules/core/auth/providers/core/oauth2.spec.ts :: GenericOAuth2Provider > refreshAccessToken > refreshes access token using refresh token
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > returns 401 when user is not authenticated
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > returns 400 when user is not found in database
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > returns basic user info with openid scope only
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles undefined scope
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles empty string scope
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > includes profile information when profile scope is present
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > includes email information when email scope is present
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > includes agent information when agent scope is present
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > includes all information when all scopes are present
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles user without name field
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles user without avatarUrl field
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles email without @ symbol
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles email with multiple @ symbols
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles multiple scopes separated by spaces
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles different user ID
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > ignores unknown scopes
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > only includes scope-specific data in response
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > tests all conditional branches in scope checking
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > verifies AuthRepository singleton is called
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles empty email parts correctly
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > tests email_verified is always true
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > tests agent_id generation format
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > ensures profile scope conditional checks work correctly
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > ensures email scope conditional checks work correctly
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > ensures agent scope conditional checks work correctly
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles database errors gracefully
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles user with empty email string
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles user with null name field
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles user with null avatarUrl field
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > verifies email_verified undefined check branch
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles scope with mixed case
tests/unit/server/external/rest/oauth2/userinfo.spec.ts :: UserInfoEndpoint > getUserInfo > handles scope string with trailing/leading spaces
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2ErrorType Enum > should have correct error type values
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > should create error with type and description
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > should use error type as message when description is not provided
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > should accept custom error code
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > should include error URI when provided
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > toJSON > should serialize to OAuth2ErrorResponse format
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > toJSON > should omit undefined fields
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > toJSON > should include error_uri when present
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create InvalidRequest error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create InvalidClient error with 401 code
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create InvalidGrant error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create UnauthorizedClient error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create UnsupportedGrantType error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create UnsupportedResponseType error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create InvalidScope error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create AccessDenied error
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > Static factory methods > should create ServerError with 500 code
tests/unit/server/external/rest/oauth2/errors.spec.ts :: OAuth2 Errors > OAuth2Error Class > should be instanceof Error
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Constructor > should initialize OAuth2 provider with correct properties
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Constructor > should set default scope when not provided
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Constructor > should set default scope when scope is null
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Constructor > should set default scope when scope is undefined
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getAuthorizationUrl > should include nonce for OIDC provider when provided
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > exchangeCodeForToken > should successfully exchange code for tokens
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > exchangeCodeForToken > should handle missing client secret gracefully
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > exchangeCodeForToken > should handle null client secret gracefully
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > exchangeCodeForToken > should throw error when token exchange fails
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > exchangeCodeForToken > should throw error when fetch throws
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should successfully retrieve user info with default mapping
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should use custom userinfo mapping when provided
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should fallback to standard fields when custom mapping returns undefined
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should fallback to id field when sub is not available
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should return empty string for id when no fallbacks are available
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should handle nested object paths in mapping
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should handle deep nested paths that do not exist
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should handle null values in nested objects
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should throw error when userinfo request fails
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getUserInfo > should throw error when fetch throws
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > refreshTokens > should successfully refresh tokens
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > refreshTokens > should handle missing client secret gracefully
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > refreshTokens > should handle null client secret gracefully
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > refreshTokens > should throw error when token refresh fails
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > refreshTokens > should throw error when fetch throws
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > OIDC-specific functionality > should support OIDC-specific features
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > OIDC-specific functionality > should include nonce in authorization URL for OIDC providers
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Edge cases and error scenarios > should handle malformed JSON responses in token exchange
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Edge cases and error scenarios > should handle malformed JSON responses in token refresh
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > Edge cases and error scenarios > should handle malformed JSON responses in getUserInfo
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getNestedValue functionality > should handle primitive values in nested objects
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getNestedValue functionality > should handle arrays in nested paths
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getNestedValue functionality > should return undefined for out-of-bounds array access
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getNestedValue functionality > should handle empty path segments
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getNestedValue functionality > should handle paths with multiple dots
tests/unit/server/external/auth/providers/generic-oauth2.spec.ts :: GenericOAuth2Provider > getNestedValue functionality > should handle circular references gracefully
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > constructor > should create an instance with default publicKeyJWK as null
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getOpenIDConfiguration > should return OpenID configuration from oauth2ConfigService
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getOpenIDConfiguration > should handle when authModule throws an error
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getOpenIDConfiguration > should handle when oauth2ConfigService throws an error
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getOpenIDConfiguration > should handle when getOpenIDConfiguration throws an error
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getOpenIDConfiguration > should work with different request objects
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getOpenIDConfiguration > should handle null/undefined config gracefully
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > getJWKS > should return 500 error when publicKeyJWK is null
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > OpenIDConfiguration interface > should accept valid OpenIDConfiguration objects
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > OpenIDConfiguration interface > should handle minimal OpenIDConfiguration objects
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > Edge cases and error scenarios > should handle when response.json throws an error
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > Edge cases and error scenarios > should handle when response.status throws an error in getJWKS
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > Edge cases and error scenarios > should handle concurrent calls to getOpenIDConfiguration
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > Property access and method binding > should maintain method binding when extracted
tests/unit/server/external/rest/oauth2/well-known.spec.ts :: WellKnownEndpoint > Property access and method binding > should handle this context correctly in arrow functions
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > without provider parameter > should display authorization consent form with valid parameters
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > without provider parameter > should handle missing required parameters
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > without provider parameter > should handle invalid responseType
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > with provider parameter > should redirect to Google provider with state
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > with provider parameter > should handle case insensitive provider names
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > with provider parameter > should handle unknown provider
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > error handling > should handle server errors during HTML generation
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > getAuthorize > error handling > should handle non-Error exceptions
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > postAuthorize > authorization denial > should handle denial with missing redirectUri
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > postAuthorize > authorization approval > should handle authorization approval with valid user
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > postAuthorize > authorization approval > should handle missing user authentication
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > handleProviderCallback > successful callback handling > should handle provider callback with authorization code
tests/unit/server/external/rest/oauth2/authorize.spec.ts :: OAuth2 Authorize Endpoint > handleProviderCallback > error handling > should handle provider callback error
tests/unit/server/external/rest/oauth2/index.spec.ts :: setupOAuth2Routes > should initialize all endpoint handlers with correct parameters
tests/unit/server/external/rest/oauth2/index.spec.ts :: setupOAuth2Routes > should use authMiddleware for protected routes
tests/unit/server/external/rest/oauth2/index.spec.ts :: setupOAuth2Routes > should work with different baseUrl formats
tests/unit/server/external/rest/oauth2/default-client.spec.ts :: getDefaultOAuthClient > should create new default client when none exists
tests/unit/server/external/rest/oauth2/default-client.spec.ts :: getDefaultOAuthClient > should create new client with all required registration fields
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Authorization Flow > should reject authorization request without client_id
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Authorization Flow > should reject authorization request without response_type
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Authorization Flow > should reject unsupported response_type
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Authorization Flow > should show IDP selection for valid authorization request
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Authorization Flow > should handle IDP selection and redirect
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Token Endpoint > should reject token request without grant_type
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Token Endpoint > should reject unsupported grant_type
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Token Endpoint > should reject invalid authorization code
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > OAuth2 Token Endpoint > should handle refresh_token grant type
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > Authorization Callback > should handle OAuth callback with error
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > Authorization Callback > should validate state parameter in callback
tests/e2e/02-server-auth.e2e.spec.ts :: [02] Server Auth Domain > Security Headers > should include security headers on auth endpoints
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Tool Listing Flow > should show different tools based on user role
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Tool Execution Flow > should enforce permissions throughout tool execution
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Tool Execution Flow > should handle tool errors gracefully
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Audit Trail > should create comprehensive audit logs
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Performance > should handle concurrent requests efficiently
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Integration with Permission System > should respect custom permissions
tests/e2e/mcp-tool-api.spec.ts :: MCP Tool API E2E Tests > Error Recovery > should handle and log various error conditions
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should successfully return authorization server metadata
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle different metadata configurations
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle metadata with minimal required fields only
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle metadata with all optional fields populated
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should propagate errors from auth module not being loaded
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should propagate errors from oauth2ConfigService being undefined
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should propagate errors from oauth2ConfigService method failure
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle response.json method throwing an error
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should validate interface compliance with IOAuth2ServerMetadataInternal
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle empty arrays in metadata
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should preserve exact metadata structure without modification
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > getAuthorizationServerMetadata > should work with different request types
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > error boundary coverage > should handle auth module exports being null
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > error boundary coverage > should handle auth module exports being undefined
tests/unit/server/external/rest/oauth2/authorization-server.spec.ts :: AuthorizationServerEndpoint > error boundary coverage > should handle oauth2ConfigService method being undefined
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Listing > should return check-status tool for admin session
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Listing > should return empty tool list for basic session
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Listing > should return empty tool list without session
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Execution > should allow admin to execute check-status tool
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Execution > should deny basic user from executing check-status tool
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Execution > should return error for unknown tool
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Execution > should require session for tool execution
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Arguments > should accept valid arguments for check-status
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Tool Arguments > should handle invalid argument types
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Security Headers > should not expose internal metadata in tool list
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Rate Limiting > should handle multiple rapid requests
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Error Handling > should handle malformed JSON-RPC requests
tests/e2e/mcp-tool-permissions.spec.ts :: MCP Tool Permissions E2E > Error Handling > should handle invalid method names
