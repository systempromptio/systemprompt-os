{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SystemPrompt OS Module Schema",
  "description": "Schema for validating module.yaml files",
  "type": "object",
  "required": ["name", "type", "version", "description", "author"],
  "properties": {
    "name": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*$",
      "minLength": 2,
      "maxLength": 50,
      "description": "Module identifier (lowercase, alphanumeric with hyphens)"
    },
    "type": {
      "type": "string",
      "enum": ["service", "daemon", "plugin", "core", "extension"],
      "description": "Module type"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*)?$",
      "description": "Semantic version"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 200,
      "description": "Brief module description"
    },
    "author": {
      "type": "string",
      "minLength": 2,
      "description": "Module author or organization"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9-]*$"
      },
      "uniqueItems": true,
      "description": "Array of module dependencies"
    },
    "config": {
      "type": "object",
      "description": "Module configuration with defaults"
    },
    "cli": {
      "type": "object",
      "properties": {
        "commands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/command"
          }
        }
      },
      "description": "CLI command definitions"
    },
    "apis": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "description"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "description": "API endpoints exposed by module"
    },
    "exports": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "What this module exports"
    },
    "singleton": {
      "type": "boolean",
      "description": "Whether module should be singleton"
    },
    "enabled": {
      "type": "boolean",
      "description": "Whether module is enabled by default"
    }
  },
  "definitions": {
    "command": {
      "type": "object",
      "required": ["name", "description"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-:]*$"
        },
        "description": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/option"
          }
        },
        "subcommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/command"
          }
        },
        "positionals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/positional"
          }
        }
      }
    },
    "option": {
      "type": "object",
      "required": ["name", "type", "description"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*$"
        },
        "alias": {
          "type": "string",
          "pattern": "^[a-zA-Z]$"
        },
        "type": {
          "type": "string",
          "enum": ["string", "boolean", "number", "array"]
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "default": {},
        "choices": {
          "type": "array"
        }
      }
    },
    "positional": {
      "type": "object",
      "required": ["name", "description"],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": ["string", "number"]
        }
      }
    }
  }
}