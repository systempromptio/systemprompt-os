/**
 * Represents a CHECK constraint from SQL.
 */
export interface CheckConstraint {
  columnName: string;
  values: string[];
}

/**
 * Represents a database column definition.
 */
export interface Column {
  name: string;
  type: string;
  nullable: boolean;
  autoGenerated?: boolean;
}

/**
 * Represents a database table definition.
 */
export interface Table {
  name: string;
  columns: Column[];
  checkConstraints: CheckConstraint[];
}

/**
 * Represents a TypeScript interface field.
 */
export interface InterfaceField {
  name: string;
  type: string;
  optional: boolean;
  nullable: boolean;
}

/**
 * Represents a service method definition.
 */
export interface ServiceMethod {
  name: string;
  params: Array<{ name: string; type: string }>;
  returnType: string;
}

/**
 * Represents service information.
 */
export interface ServiceInfo {
  name: string;
  methods: ServiceMethod[];
}

/**
 * Type generation options.
 */
export interface TypeGenerationOptions {
  module?: string;
  pattern?: string;
  types?: Array<'database' | 'interfaces' | 'schemas' | 'service-schemas' | 'type-guards' | 'all'>;
}

/**
 * Module generation options.
 */
export interface ModuleGenerationOptions {
  database: boolean;
  interfaces: boolean;
  schemas: boolean;
  serviceSchemas: boolean;
  typeGuards: boolean;
}
