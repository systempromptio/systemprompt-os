 ✓ tests/unit/server/external/rest/oauth2/userinfo.spec.ts (48 tests) 33ms
   × GenericOAuth2Provider > exchangeCodeForTokens > exchanges authorization code for tokens 14ms
   × GenericOAuth2Provider > getUserInfo > fetches user info with access token 4ms
   × GenericOAuth2Provider > refreshTokens > refreshes access token using refresh token 2ms
   × GenericOAuth2Provider > Constructor > should initialize OAuth2 provider with correct properties 11ms
   × GenericOAuth2Provider > Constructor > should set default scope when not provided 2ms
   × GenericOAuth2Provider > Constructor > should set default scope when scope is null 1ms
   × GenericOAuth2Provider > Constructor > should set default scope when scope is undefined 1ms
   × GenericOAuth2Provider > getAuthorizationUrl > should include nonce for OIDC provider when provided 2ms
   × GenericOAuth2Provider > exchangeCodeForToken > should successfully exchange code for tokens 6ms
   × GenericOAuth2Provider > getUserInfo > should successfully retrieve user info with default mapping 6ms
   × GenericOAuth2Provider > getUserInfo > should use custom userinfo mapping when provided 2ms
   × GenericOAuth2Provider > getUserInfo > should fallback to standard fields when custom mapping returns undefined 1ms
   × GenericOAuth2Provider > getUserInfo > should return empty string for id when no fallbacks are available 1ms
   × GenericOAuth2Provider > refreshTokens > should successfully refresh tokens 1ms
   × GenericOAuth2Provider > OIDC-specific functionality > should support OIDC-specific features 1ms
   × GenericOAuth2Provider > OIDC-specific functionality > should include nonce in authorization URL for OIDC providers 0ms
   × GenericOAuth2Provider > getNestedValue functionality > should handle primitive values in nested objects 1ms
   × GenericOAuth2Provider > getNestedValue functionality > should handle circular references gracefully 2ms
   × OAuth2 Errors > OAuth2Error Class > should have readonly properties 8ms
   × WellKnownEndpoint > constructor > should create an instance with default publicKeyJWK as null 13ms
   × WellKnownEndpoint > getOpenIDConfiguration > should return OpenID configuration from oauth2ConfigService 2ms
   × WellKnownEndpoint > getOpenIDConfiguration > should handle when authModule throws an error 6ms
   × WellKnownEndpoint > getOpenIDConfiguration > should handle when oauth2ConfigService throws an error 2ms
   × WellKnownEndpoint > getOpenIDConfiguration > should handle when getOpenIDConfiguration throws an error 2ms
   × WellKnownEndpoint > getOpenIDConfiguration > should work with different request objects 2ms
   × WellKnownEndpoint > getOpenIDConfiguration > should handle null/undefined config gracefully 1ms
   × WellKnownEndpoint > getJWKS > should return 500 error when publicKeyJWK is null 2ms
   × WellKnownEndpoint > OpenIDConfiguration interface > should accept valid OpenIDConfiguration objects 1ms
   × WellKnownEndpoint > OpenIDConfiguration interface > should handle minimal OpenIDConfiguration objects 1ms
   × WellKnownEndpoint > Edge cases and error scenarios > should handle when response.json throws an error 1ms
   × WellKnownEndpoint > Edge cases and error scenarios > should handle when response.status throws an error in getJWKS 1ms
   × WellKnownEndpoint > Edge cases and error scenarios > should handle concurrent calls to getOpenIDConfiguration 2ms
   × WellKnownEndpoint > Property access and method binding > should maintain method binding when extracted 1ms
   × WellKnownEndpoint > Property access and method binding > should handle this context correctly in arrow functions 1ms
   × setupOAuth2Routes > should setup all OAuth2 routes 7ms
   × setupOAuth2Routes > should initialize all endpoint handlers with correct parameters 2ms
   × setupOAuth2Routes > should use authMiddleware for protected routes 1ms
   × setupOAuth2Routes > should handle routes correctly when called 1ms
   × setupOAuth2Routes > should return a Promise that resolves to void 0ms
   × setupOAuth2Routes > should work with different baseUrl formats 1ms
   × getDefaultOAuthClient > should create new default client when none exists 41ms
   × getDefaultOAuthClient > should create new client with all required registration fields 7ms
   × [02] Server Auth Domain > OAuth2 Authorization Flow > should reject authorization request without client_id 10ms
   × [02] Server Auth Domain > OAuth2 Authorization Flow > should reject authorization request without response_type 6ms
   × [02] Server Auth Domain > OAuth2 Authorization Flow > should reject unsupported response_type 7ms
   × [02] Server Auth Domain > OAuth2 Authorization Flow > should show IDP selection for valid authorization request 5ms
   × [02] Server Auth Domain > OAuth2 Authorization Flow > should handle IDP selection and redirect 5ms
   × [02] Server Auth Domain > OAuth2 Token Endpoint > should reject token request without grant_type 6ms
   × [02] Server Auth Domain > OAuth2 Token Endpoint > should reject unsupported grant_type 4ms
   × [02] Server Auth Domain > OAuth2 Token Endpoint > should reject invalid authorization code 6ms
   × [02] Server Auth Domain > OAuth2 Token Endpoint > should handle refresh_token grant type 4ms
   × [02] Server Auth Domain > Authorization Callback > should handle OAuth callback with error 3ms
   × [02] Server Auth Domain > Authorization Callback > should validate state parameter in callback 4ms
   × [02] Server Auth Domain > Security Headers > should include security headers on auth endpoints 5ms
   × MCP Tool API E2E Tests > Tool Listing Flow > should show different tools based on user role 11ms
   × MCP Tool API E2E Tests > Tool Execution Flow > should enforce permissions throughout tool execution 1ms
   × MCP Tool API E2E Tests > Tool Execution Flow > should handle tool errors gracefully 6ms
   × MCP Tool API E2E Tests > Audit Trail > should create comprehensive audit logs 1ms
   × MCP Tool API E2E Tests > Performance > should handle concurrent requests efficiently 5ms
   × MCP Tool API E2E Tests > Integration with Permission System > should respect custom permissions 1ms
   × MCP Tool API E2E Tests > Error Recovery > should handle and log various error conditions 5ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should successfully return authorization server metadata 6ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle different metadata configurations 6ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle metadata with minimal required fields only 2ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle metadata with all optional fields populated 2ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should propagate errors from auth module not being loaded 2ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should propagate errors from oauth2ConfigService being undefined 1ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should propagate errors from oauth2ConfigService method failure 1ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle response.json method throwing an error 1ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should validate interface compliance with IOAuth2ServerMetadataInternal 1ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should handle empty arrays in metadata 1ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should preserve exact metadata structure without modification 1ms
   × AuthorizationServerEndpoint > getAuthorizationServerMetadata > should work with different request types 1ms
   × AuthorizationServerEndpoint > error boundary coverage > should handle auth module exports being null 1ms
   × AuthorizationServerEndpoint > error boundary coverage > should handle auth module exports being undefined 1ms
   × AuthorizationServerEndpoint > error boundary coverage > should handle oauth2ConfigService method being undefined 1ms
   × OAuth2 Authorize Endpoint > getAuthorize > without provider parameter > should display authorization consent form with valid parameters 10ms
   × OAuth2 Authorize Endpoint > getAuthorize > without provider parameter > should handle missing required parameters 4ms
   × OAuth2 Authorize Endpoint > getAuthorize > without provider parameter > should handle invalid responseType 1ms
   × OAuth2 Authorize Endpoint > getAuthorize > with provider parameter > should redirect to Google provider with state 1ms
   × OAuth2 Authorize Endpoint > getAuthorize > with provider parameter > should handle case insensitive provider names 1ms
   × OAuth2 Authorize Endpoint > getAuthorize > with provider parameter > should handle unknown provider 1ms
   × OAuth2 Authorize Endpoint > getAuthorize > error handling > should handle server errors during HTML generation 1ms
   × OAuth2 Authorize Endpoint > getAuthorize > error handling > should handle non-Error exceptions 1ms
   × OAuth2 Authorize Endpoint > postAuthorize > authorization denial > should handle denial with missing redirectUri 1ms
   × OAuth2 Authorize Endpoint > postAuthorize > authorization approval > should handle authorization approval with valid user 1ms
   × OAuth2 Authorize Endpoint > postAuthorize > authorization approval > should handle missing user authentication 1ms
   × OAuth2 Authorize Endpoint > handleProviderCallback > successful callback handling > should handle provider callback with authorization code 1ms
   × OAuth2 Authorize Endpoint > handleProviderCallback > error handling > should handle provider callback error 1ms
   × OAuth2 Authorize Endpoint > handleProviderCallback > error handling > should handle unknown provider 1ms
   × MCP Tool Permissions E2E > Tool Listing > should return check-status tool for admin session 29ms
   × MCP Tool Permissions E2E > Tool Listing > should return empty tool list for basic session 5ms
   × MCP Tool Permissions E2E > Tool Listing > should return empty tool list without session 3ms
   × MCP Tool Permissions E2E > Tool Execution > should allow admin to execute check-status tool 3ms
   × MCP Tool Permissions E2E > Tool Execution > should deny basic user from executing check-status tool 3ms
   × MCP Tool Permissions E2E > Tool Execution > should return error for unknown tool 3ms
   × MCP Tool Permissions E2E > Tool Execution > should require session for tool execution 3ms
   × MCP Tool Permissions E2E > Tool Arguments > should accept valid arguments for check-status 2ms
   × MCP Tool Permissions E2E > Tool Arguments > should handle invalid argument types 3ms
   × MCP Tool Permissions E2E > Security Headers > should not expose internal metadata in tool list 3ms
   × MCP Tool Permissions E2E > Rate Limiting > should handle multiple rapid requests 18ms
   × MCP Tool Permissions E2E > Error Handling > should handle malformed JSON-RPC requests 2ms
   × MCP Tool Permissions E2E > Error Handling > should handle invalid method names 4ms
 ✓ tests/e2e/tunnel/cloudflared-tunnel.spec.ts (4 tests) 6547ms
   ✓ Cloudflared Tunnel E2E Tests > should start cloudflared tunnel in Docker and expose local service 5468ms
